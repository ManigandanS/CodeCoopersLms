angular.module("vt").service("appService", [function () { this.baseUrl = "http://inspirationcoachingapi.azurewebsites.net/api/" }]), angular.module("vt.account").service("authenticationSvc", ["$resource", "$http", "$q", "$window", "appService", function (e, r, n, t, u) { function o(r) { var o = e(u.baseUrl + "Signin"), i = n.defer(); return o.save(r, function (e) { return e.IsSuccess ? (d = e.Data, t.sessionStorage.setItem("user", JSON.stringify(e.Data)), i.resolve(e)) : i.reject(e) }, function (e) { return i.reject(e) }), i.promise } function i(r) { var o = n.defer(), i = e(u.baseUrl + "signup"); return i.save(r, function (e) { return e.IsSuccess ? (d = e.Data, t.sessionStorage.setItem("user", JSON.stringify(e.Data)), o.resolve(e)) : o.reject(e) }, function (e) { return o.reject(e) }), o.promise } function s() { d = null, t.sessionStorage.removeItem("user") } function c(r) { var t = n.defer(), o = e(u.baseUrl + "/authorization"), i = { id: d.Id, route: r }; return o.save(i, function (e) { var r = e.IsSuccess; return r ? t.resolve(r) : t.reject({ authenticated: !0, authorized: !1, defaultRoute: d.defaultRoute }) }, function (e) { return t.reject(e) }), t.promise } function a() { return null == d && t.sessionStorage.user && (d = JSON.parse(t.sessionStorage.getItem("user"))), d } function f(e) { if (d) { var r = c(e); return r ? (r.then(function (e) { console.log(e) }, function (e) { console.log(e) }), n.when(r)) : n.reject({ authenticated: !0, authorized: !1 }) } return n.reject({ authenticated: !1 }) } function v() { return null != d && d.Name.length > 0 && d.Id.length > 0 } function l() { return null != d ? d.Id + ":" + d.Token : "" } function g() { t.sessionStorage.user && (d = JSON.parse(t.sessionStorage.getItem("user"))) } var d; return g(), { signin: o, signout: s, getUserInfo: a, checkAccess: c, signup: i, authorize: f, isSignedIn: v, getToken: l } }]), angular.module("vt.account").factory("sessionInjector", ["$window", function (e) { return { request: function (r) { var n, t; return e.sessionStorage.user && (n = JSON.parse(e.sessionStorage.getItem("user")), n && n.Id && n.Token ? (t = window.btoa(n.Id + ":" + n.Token), r.headers["x-session-token"] = t) : r.headers["x-session-token"] = ""), r } } }]), angular.module("vt.account").service("signupService", ["$resource", "$q", "authenticationSvc", function (e, r, n) { function t(e) { var t = r.defer(); return n.signup(e, function (e) { return t.resolve(e) }, function (e) { return t.reject(e) }), t.promise } return { signup: t } }]), angular.module("vt.account").service("signinService", ["$resource", "$q", "authenticationSvc", function (e, r, n) { function t(e) { var t = r.defer(); return n.signin(e, function (e) { return t.resolve(e) }, function (e) { return t.reject(e) }), t.promise } return { signin: t } }]), angular.module("vt.course").service("courseDetailService", ["$resource", "$q", "appService", function (e, r, n) { var t = e(n.baseUrl + "Level"), u = function () { var e = r.defer(); return t.get(function (r) { return e.resolve(r) }, function (r) { return e.reject(r) }), e.promise }; return { get: u } }]), angular.module("vt.course").service("classService", ["$resource", "$q", "appService", function (e, r, n) { var t = function (t) { var u = r.defer(), o = e(n.baseUrl + "Class"); return o.get({ id: t }, function (e) { return u.resolve(e) }, function (e) { return u.reject(e) }), u.promise }, u = function (t) { var u = r.defer(), o = e(n.baseUrl + "Unlock"); return o.get({ id: t }, function (e) { return u.resolve(e) }, function (e) { return u.reject(e) }), u.promise }, o = function (t) { var u = r.defer(), o = e(n.baseUrl + "Content"); return o.get(t, function (e) { return e.IsSuccess ? u.resolve(e) : u.reject(e) }, function (e) { return u.reject(e) }), u.promise }, i = function (t) { var u = r.defer(), o = e(n.baseUrl + "Quiz"); return o.get({ contentId: t }, function (e) { return u.resolve(e) }, function (e) { return u.reject(e) }), u.promise }, s = function (t) { var u = r.defer(), o = e(n.baseUrl + "Quiz"); return o.save(t, function (e) { return u.resolve(e) }, function (e) { return u.reject(e) }), u.promise }, c = function () { var t = r.defer(), u = e(n.baseUrl + "Unlock"); return u.save(null, function (e) { return t.resolve(e) }, function (e) { return t.reject(e) }), t.promise }; return { get: t, isUnlocked: u, getId: o, loadQuiz: i, submitAnswers: s, unlockFirstContent: c } }]), angular.module("vt.account").service("traineeService", ["$resource", "$q", "appService", function (e, r, n) { var t = function (t) { var u = r.defer(), o = e(n.baseUrl + "Trainee"); return o.get({ id: t }, function (e) { return u.resolve(e) }, function (e) { return u.reject(e) }), u.promise }, u = function (t) { var u = r.defer(), o = e(n.baseUrl + "Payment"); return o.save(t, function (e) { return u.resolve(e) }, function (e) { return u.reject(e) }), u.promise }; return { get: t, pay: u } }]);